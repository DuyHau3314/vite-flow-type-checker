# The PROJECT_ID and SHORT_SHA variables are automatically replaced by Cloud Build.

steps:
# Step 5. Build docker image
- id: Build docker image
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/commerceship-repository/commerceship-webapp-cloudbuild:$SHORT_SHA', '.' ]

# Step 6. Push docker image
- id: Push docker image
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'us-central1-docker.pkg.dev/$PROJECT_ID/commerceship-repository/commerceship-webapp-cloudbuild:$SHORT_SHA' ]

# This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud source repos clone commerceship-cloudbuild-env && \
    cd commerceship-cloudbuild-env && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     cd commerceship-cloudbuild-env && \
     ls && \
     git log . && \
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes-webapp.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > kubernetes-webapp.yaml

# This step pushes the manifest back to commerceship-cloudbuild-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd commerceship-cloudbuild-env && \
    git add kubernetes-webapp.yaml && \
    git commit -m "Deploying image us-central1-docker.pkg.dev/$PROJECT_ID/commerceship-repository/commerceship-webapp-cloudbuild:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository commerceship-webapp-cloudbuild
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate
